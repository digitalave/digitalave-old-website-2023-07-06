I"âo<h1 id="install--configure-elk-stack-on-centos7">Install &amp; Configure ELK Stack On CentOS7</h1>

<p><img src="/images/pages/elk-stack/ELK.png" width="100%" /></p>

<p>‚ÄúELK‚Äù is the acronym for the three open source projects call Elasticsearch, Logstash and Kibana. ELK stack made easier to analyze logs to system administrators. ELK stack collect logs from clients using Beats protocol.</p>

<h2 id="elk-stack-main-components-">ELK Stack Main Components:-</h2>

<p><strong>Elasticsearch</strong> is an open source, distributed, RESTful, JSON based search and analytic engine. Easy to use and flexible. Elasticsearch is the heart of ELK stack. Elasticsearch is a No-SQL database.</p>

<p><strong>Logstash</strong> is a open source, server-side data processing pipeline that pull events data from multitude of sources simultaneously, transform it, and then sends it to Elasticsearch. Easily pull data from logs, metrics, web applications, data sources and various AWS services. Logstash dynamically transforms and prepares data regardless of format or complexity. Derive structure from unstructured data with grock.</p>

<p><strong>Kibana</strong> provides GUI for users visualize data with charts and graphs real-time. It is a window into the Elastic Stack. Provides data exploration, visualization and dashboarding.</p>

<p><strong>Beats</strong> is the platform for single-purpose data shippers. They install as lightweight agents and send data from numerous machines to Logstash of Elasticsearch.</p>

<p><strong>FileBeat</strong> will send logs to Logstash, Logstash process incoming logs and stores into Elasticsearch, and then we can visualize through the Kibana web interface.</p>

<h3 id="elk-stack-architecture">ELK Stack Architecture</h3>

<p><img src="/images/pages/elk-stack/image002.png" width="100%" /></p>

<p><img src="/images/pages/elk-stack/image003.png" width="100%" /></p>

<p>Software Versions I have used in this tutorial.</p>

<p>ELK Stack Server 192.168.100.10 (CentOS7)
Beat Client 192.168.100.50 (CentOS7)
Elasticsearch Version: 6.3.1
Logstash Version 6.3.1
Kibana Version 6.3.1</p>

<h2 id="step-1---install-java-8">STEP 1 - Install Java 8</h2>

<p>Java is required for the Elastic stack deployment. Elasticsearch requires Java 8, it is recommended to use the Oracle JDK 1.8. I will install Java 8 from the official Oracle rpm package. ELK requires the Oracle Java JDK package has to be installed. The same JVM version should be installed on all Elasticsearch nodes and clients.</p>

<h4 id="install-jdk-rpm">Install JDK RPM</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">-ivh</span> jdk-8u171-linux-x64.rpm
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image004_N.jpg" width="100%" /></p>

<h4 id="set-default-java-version">Set Default JAVA Version</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# alternatives <span class="nt">--config</span> java
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image005_N.jpg" width="100%" /></p>

<h4 id="set-javac-and-jar-paths">Set JAVAC and JAR Paths</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# alternatives <span class="nt">--set</span> jar /usr/java/jdk1.8.0_171-amd64/bin/jar
<span class="o">[</span>root@elk-stack /]# alternatives <span class="nt">--set</span> javac /usr/java/jdk1.8.0_171-amd64/bin/javac
</code></pre></div></div>
<h4 id="check-java-version">Check JAVA Version</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# java <span class="nt">-version</span>
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image006_N.jpg" width="100%" /></p>

<h4 id="set-java-environment-variables">Set JAVA Environment Variables</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# <span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.8.0_171-amd64/
<span class="o">[</span>root@elk-stack /]# <span class="nb">export </span><span class="nv">JRE_HOME</span><span class="o">=</span>/usr/java/jdk1.8.0_171-amd64/jre/
<span class="o">[</span>root@elk-stack /]# <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/java/jdk1.8.0_171-amd64/bin/:/usr/java/jdk1.8.0_171-amd64/jre/bin/
</code></pre></div></div>
<p>Set Environment Variables on /etc/bashrc to Auto Set at System Boot</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim ~/.bashrc
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.8.0_171-amd64/
<span class="nv">JRE_HOME</span><span class="o">=</span>/usr/java/jdk1.8.0_171-amd64/jre/
<span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/java/jdk1.8.0_171-amd64/bin/:/usr/java/jdk1.8.0_171-amd64/jre/bin/
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image007_N.jpg" width="100%" /></p>

<h2 id="step-2--install-and-configure-elasticsearch">STEP 2 ‚Äì INSTALL AND CONFIGURE ELASTICSEARCH</h2>

<p>In this step, I will install and configure Elasticsearch version 6.3.1</p>

<h4 id="a-import-public-gpg-key-to-the-elk-stack-server">A. Import Public GPG Key to the ELK-Stack Server</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-download-elasticsearch-rpm-package">B. Download Elasticsearch RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.rpm
</code></pre></div></div>

<h4 id="c-install-elasticsearch-rpm-package">C. Install Elasticsearch RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">-ivh</span> elasticsearch-6.3.1.rpm
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image008_N.jpg" width="100%" /></p>

<h4 id="d-firewall-configuration">D. Firewall Configuration</h4>
<p>Allow traffic through the TCP port 9200 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>9200/tcp
<span class="o">[</span>root@elk-stack ~]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>9300/tcp
<span class="o">[</span>root@elk-stack /]# firewall-cmd ‚Äìreload
</code></pre></div></div>

<h4 id="e-configure-elasticsearch">E. Configure Elasticsearch</h4>
<p>Do the following changes</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim /etc/elasticsearch/elasticsearch.yml
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cluster.name: my-application
node.name: node-1
path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch
network.host: 127.0.0.1
<span class="c">#network.host: 192.168.100.10</span>
http.port: 9200
</code></pre></div></div>

<h4 id="f-start--enable-elasticsearch-at-system-boot">F. Start &amp; Enable Elasticsearch at System Boot</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# systemctl start elasticsearch.service
<span class="o">[</span>root@elk-stack /]# systemctl <span class="nb">enable </span>elasticsearch.service
</code></pre></div></div>

<h4 id="g-test-elasticsearch">G. Test Elasticsearch</h4>
<p>Check Elasticsearch port ‚Äú9200‚Äù state as ‚ÄúLISTEN‚Äù</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# netstat <span class="nt">-plntu</span>
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image009_N.jpg" width="100%" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# curl <span class="nt">-XGET</span> <span class="s1">'192.168.100.10:9200/?pretty'</span>
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image010_N.jpg" width="100%" /></p>

<p>Output from the external web browser</p>

<p><img src="/images/pages/elk-stack/image011_N.jpg" width="100%" /></p>

<h4 id="step-3--install-and-configure-logstash">STEP 3 ‚Äì INSTALL AND CONFIGURE LOGSTASH</h4>

<p>In this step I will install Logstash version 6.3.1 and configure it as a central log server, receives logs from clients with Filebeat, then filter and transform the syslog data and move it into the stash (Elasticsearch)</p>

<p>A. Import Public GPG Key to the ELK-Stack Server</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-download-logstash-rpm-package">B. Download Logstash RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# wget https://artifacts.elastic.co/downloads/logstash/logstash-6.3.1.rpm
</code></pre></div></div>

<h4 id="c-install-logstash-rpm-package">C. Install Logstash RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">-ivh</span> logstash-6.3.1.rpm
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image012_N.jpg" width="100%" /></p>

<h4 id="d-firewall-configuration-1">D. Firewall Configuration</h4>
<p>Allow traffic through the TCP port 5044 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>5044/tcp
<span class="o">[</span>root@elk-stack /]# firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="e-generate-a-new-ssl-certificate">E. Generate a New SSL Certificate</h4>
<p>Create new ssl certificate for securing communication between Logstash &amp; Filebeat (clients). SSL Certificate file use clients to identify the elastic server.</p>

<p>Do the following changes under the ‚Äú[ V3_ca ]‚Äù section for the server identification.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span> v3_ca <span class="o">]</span>
<span class="c">#Server IP Address</span>
subjectAltName <span class="o">=</span> IP: 192.168.100.10
</code></pre></div></div>

<p>Generate the certificate file with the openssl command.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# openssl req <span class="nt">-config</span> /etc/pki/tls/openssl.cnf <span class="nt">-x509</span> <span class="nt">-days</span> 3650 <span class="nt">-batch</span> <span class="nt">-nodes</span> <span class="nt">-newkey</span> rsa:2048 <span class="nt">-keyout</span> /etc/pki/tls/private/logstash-forwarder.key <span class="nt">-out</span> /etc/pki/tls/certs/logstash-forwarder.crt
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image013_N.jpg" width="100%" /></p>

<p>Once ssl certificate is ready, this certificate should be copied to all the clients using scp command.</p>

<h4 id="f-configure-logstash">F. Configure Logstash</h4>
<p>Create new configuration file named ‚Äúlogstash.conf‚Äù under the ‚Äú/etc/logstash/conf.d‚Äù directory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim /etc/logstash/conf.d/logstash.conf
</code></pre></div></div>

<p>There are <strong>three sections</strong> in ‚Äúlogstash.conf‚Äù file.</p>

<h5 id="1-input-section">1. Input Section</h5>
<p>This section make Logstash to listen on port 5044 for incoming logs &amp; provides SSL certificate for secure connection.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># input section</span>
input <span class="o">{</span>
 beats <span class="o">{</span>
   port <span class="o">=&gt;</span> 5044
   ssl <span class="o">=&gt;</span> <span class="nb">true
   </span>ssl_certificate <span class="o">=&gt;</span> <span class="s2">"/etc/pki/tls/certs/logstash-forwarder.crt"</span>
   ssl_key <span class="o">=&gt;</span> <span class="s2">"/etc/pki/tls/private/logstash-forwarder.key"</span>
   congestion_threshold <span class="o">=&gt;</span> <span class="s2">"40"</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-filter-section">2. Filter Section</h5>
<p>This section parse the logs before sending them to Elasticsearch.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Filter section</span>
filter <span class="o">{</span>
<span class="k">if</span> <span class="o">[</span><span class="nb">type</span><span class="o">]</span> <span class="o">==</span> <span class="s2">"syslog"</span> <span class="o">{</span>
    grok <span class="o">{</span>
      match <span class="o">=&gt;</span> <span class="o">{</span> <span class="s2">"message"</span> <span class="o">=&gt;</span> <span class="s2">"%{SYSLOGLINE}"</span> <span class="o">}</span>
    <span class="o">}</span>
    <span class="nb">date</span> <span class="o">{</span>
match <span class="o">=&gt;</span> <span class="o">[</span> <span class="s2">"timestamp"</span>, <span class="s2">"MMM  d HH:mm:ss"</span>, <span class="s2">"MMM dd HH:mm:ss"</span> <span class="o">]</span>

<span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="3-output-section">3. Output Section</h5>
<p>This section defines the storage for the logs to be stored.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># output section</span>
output <span class="o">{</span>
 elasticsearch <span class="o">{</span>
  hosts <span class="o">=&gt;</span> localhost
    index <span class="o">=&gt;</span> <span class="s2">"%{[@metadata][beat]}-%{+YYYY.MM.dd}"</span>
       <span class="o">}</span>
stdout <span class="o">{</span>
    codec <span class="o">=&gt;</span> rubydebug
       <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image014_N.jpg" width="100%" /></p>

<h4 id="g-enable--start-logstash-service">G. Enable &amp; Start Logstash Service</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# systemctl daemon-reload
<span class="o">[</span>root@elk-stack /]# systemctl <span class="nb">enable </span>logstash.service 
<span class="o">[</span>root@elk-stack /]# systemctl start logstash.service
</code></pre></div></div>

<h4 id="step-4--install-and-configure-kibana">STEP 4 ‚Äì INSTALL AND CONFIGURE KIBANA</h4>

<h4 id="a-import-public-gpg-key-to-the-elk-stack-server-1">A. Import Public GPG Key to the ELK-Stack Server</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-download-logstash-rpm-package-1">B. Download Logstash RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">-ivh</span> kibana-6.3.1-x86_64.rpm
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image015_N.jpg" width="100%" /></p>

<h4 id="c-firewall-configuration">C. Firewall Configuration</h4>
<p>Allow traffic through the TCP port 5601 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>5601/tcp
<span class="o">[</span>root@elk-stack /]# firewall-cmd ‚Äìreload
</code></pre></div></div>

<h4 id="d-configure-kibana">D. Configure Kibana</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim /etc/kibana/kibana.yml
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server.port: 5601
server.host: <span class="s2">"127.0.0.1"</span>
server.name: <span class="s2">"Kibana Monitor"</span>
elasticsearch.url: ‚Äúhttp://localhost:9200‚Äù
</code></pre></div></div>

<h4 id="e-enable--start-logstash-service">E. Enable &amp; Start Logstash Service</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# systemctl daemon-reload
<span class="o">[</span>root@elk-stack /]# systemctl <span class="nb">enable </span>kibana.service 
<span class="o">[</span>root@elk-stack /]# systemctl start kibana.service
</code></pre></div></div>

<h2 id="step-5--install-and-configure-nginx">STEP 5 ‚Äì INSTALL AND CONFIGURE Nginx</h2>
<h4 id="a-insatll-epel-repository">A. Insatll EPEL Repository</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# yum <span class="nt">-y</span> <span class="nb">install </span>epel-release
</code></pre></div></div>
<h4 id="b-install-nginx--httpd-tools">B. Install Nginx &amp; httpd-tools</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# yum <span class="nt">-y</span> <span class="nb">install </span>nginx httpd-tools
</code></pre></div></div>

<h4 id="c-create-username-admin-and-password-123456-for-kibana-web-interface">C. Create Username ‚Äúadmin‚Äù and Password ‚Äú123456‚Äù for Kibana Web Interface</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# htpasswd <span class="nt">-c</span> /etc/nginx/htpasswd.users admin
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image016_N.jpg" width="100%" /></p>

<h4 id="d-configure-nginx">D. Configure Nginx</h4>
<p>Edit the Nginx configuration file and remove the ‚Äòserver { }‚Äô block, so we can add a new virtual host configuration.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim /etc/nginx/nginx.conf
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image017_N.jpg" width="100%" /></p>

<p>Create new virtual host configuration file named ‚Äúkibana.conf‚Äù under the conf.d directory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# vim /etc/nginx/conf.d/kibana.conf
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server <span class="o">{</span>
    listen 80<span class="p">;</span>
 
    server_name elk-stack.co<span class="p">;</span>
 
    auth_basic <span class="s2">"Restricted Access"</span><span class="p">;</span>
    auth_basic_user_file /etc/nginx/.kibana-user<span class="p">;</span>
 
    location / <span class="o">{</span>
        proxy_pass http://localhost:5601<span class="p">;</span>
        proxy_http_version 1.1<span class="p">;</span>
        proxy_set_header Upgrade <span class="nv">$http_upgrade</span><span class="p">;</span>
        proxy_set_header Connection <span class="s1">'upgrade'</span><span class="p">;</span>
        proxy_set_header Host <span class="nv">$host</span><span class="p">;</span>
        proxy_cache_bypass <span class="nv">$http_upgrade</span><span class="p">;</span>
    <span class="o">}</span>
   <span class="o">}</span>
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image018_N.jpg" width="100%" /></p>

<p>Check Nginx Configuration</p>

<p><img src="/images/pages/elk-stack/image019_N.jpg" width="100%" /></p>

<h4 id="e-enable--start-nginx-service">E. Enable &amp; Start Nginx Service</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# systemctl <span class="nb">enable </span>nginx.service
<span class="o">[</span>root@elk-stack /]# systemctl start nginx.service
</code></pre></div></div>

<h4 id="f-firewall-configuration">F. Firewall Configuration</h4>
<p>Allow traffic through the TCP port 80 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack ~]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>80/tcp
<span class="o">[</span>root@elk-stack ~]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-service</span><span class="o">=</span>http
<span class="o">[</span>root@elk-stack ~]# firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="g-selinux-confguration">G. SELinux Confguration</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack kibana]# setsebool <span class="nt">-P</span> httpd_can_network_connect 1
</code></pre></div></div>

<h2 id="step-6--install--configure-filebeat-on-the-client">STEP 6 ‚Äì Install &amp; Configure Filebeat on the Client</h2>

<h4 id="a-copy-ssl-certificate-from-elk-server-to-client">A. Copy SSL Certificate from ELK Server to Client</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack ~]# scp /etc/pki/tls/certs/logstash-forwarder.crt root@192.168.100.50:/etc/pki/tls/certs/
</code></pre></div></div>

<h4 id="b-import-public-gpg-key-to-the-elk-stack-server">B. Import Public GPG Key to the ELK-Stack Server</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@elk-stack /]# rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="c-download--install-filebeat-rpm-package">C. Download &amp; Install Filebeat RPM Package</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl1 /]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.3.1-x86_64.rpm

<span class="o">[</span>root@cl1 /]# rpm <span class="nt">-ivh</span> filebeat-6.3.1-x86_64.rpm
</code></pre></div></div>

<p><img src="/images/pages/elk-stack/image020_N.jpg" width="100%" /></p>

<p><strong>Configure File Beat</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl1 /]#vim /etc/filebeat/filebeat.yml
</code></pre></div></div>

<p>In the paths: section
paths:</p>

<blockquote>
  <ul>
    <li>/var/log/secure</li>
    <li>/var/log/messages</li>
  </ul>
</blockquote>

<p>OR</p>

<blockquote>
  <p>/var/log/*.log</p>
</blockquote>

<p>By default, Filebeat is using Elasticsearch as the output target by default. Disable Elasticsearch output by commenting the configuration.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>142 <span class="c">#-------------------------- Elasticsearch output ------------------------------</span>
143 <span class="c">#output.elasticsearch:</span>
144 <span class="c"># Array of hosts to connect to.</span>
145 <span class="c"># hosts: ["localhost:9200"]</span>
</code></pre></div></div>

<p>Now add the Logstash as the new output configuration and do the changes as show below.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>152 <span class="c">#----------------------------- Logstash output --------------------------------</span>
153 output.logstash:
154   <span class="c"># The Logstash hosts</span>
155   hosts: <span class="o">[</span><span class="s2">"localhost:5044"</span><span class="o">]</span>
156   bulk_max_size: 1024
157   ssl.certificate_authorities: <span class="o">[</span><span class="s2">"/etc/pki/tls/certs/logstash-forwarder.crt"</span><span class="o">]</span>
158   template.name: <span class="s2">"filebeat"</span>
159   template.path: <span class="s2">"filebeat.template.json"</span>
160   template.overwrite: <span class="nb">false</span>

</code></pre></div></div>
<p>After that configurations will look like below.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>filebeat.inputs:

- <span class="nb">type</span>: log
  enabled: <span class="nb">false
  </span>paths:
    - /var/log/<span class="k">*</span>.log
    
output.logstash:
  hosts: <span class="o">[</span><span class="s2">"localhost:5044"</span><span class="o">]</span>
  bulk_max_size: 1024
  ssl.certificate_authorities: <span class="o">[</span><span class="s2">"/etc/pki/tls/certs/logstash-forwarder.crt"</span><span class="o">]</span>
  template.name: <span class="s2">"filebeat"</span>
  template.path: <span class="s2">"filebeat.template.json"</span>
  template.overwrite: <span class="nb">false</span>
</code></pre></div></div>

<h4 id="e-enable--start-filebeat-service">E. Enable &amp; Start Filebeat Service</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl1 /]# systemctl <span class="nb">enable </span>filebeat.service 
<span class="o">[</span>root@cl1 /]# systemctl start filebeat.service
</code></pre></div></div>

<h2 id="step-7--using-elastic-stack">STEP 7 ‚Äì Using Elastic Stack</h2>
<p>Login to Kibana dashboard using the browser with password that you used at Nginx configuration.</p>

<p><img src="/images/pages/elk-stack/image021.png" width="100%" /></p>

<p><img src="/images/pages/elk-stack/image022_N.jpg" width="100%" /></p>

<p>Now ELK Initial Steps are completed. We‚Äôll discuss regarding Log Monitoring in a next tutorial.</p>

<p><strong>Little Request:</strong></p>

<blockquote>
  <p>I appreciate you guys taking the time in reading my post. Please check out my YouTube channel and please subscribe for more as it‚Äôll help me loads.</p>
</blockquote>

<p><a href="https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ/featured?view_as=subscriber" target="_blank">https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ/featured?view_as=subscriber</a></p>

<p><a href="https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ?sub_confirmation=1"><img src="Docker-Installation/sub.gif" /></a></p>

<p><a href="https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ?sub_confirmation=1"><img src="Docker-Installation/sub.gif" alt="Foo" /></a></p>

:ET