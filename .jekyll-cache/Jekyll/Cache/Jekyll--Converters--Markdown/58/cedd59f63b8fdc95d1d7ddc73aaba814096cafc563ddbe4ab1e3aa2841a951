I"ís<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/2QofuOkobKc" frameborder="0" allowfullscreen=""></iframe></div>

<h1 id="install--configure-elk-stack-73-on-centos7">INSTALL &amp; CONFIGURE ELK STACK 7.3 ON CENTOS7</h1>

<p><img src="/images/pages/elk-stack/ELK.png" width="100%" /></p>

<h2 id="introduction">INTRODUCTION</h2>

<p>Hi Folks,
In this tutorial I‚Äôm going to install &amp; configure ELK Stack as a Log server inside my testing Lab.</p>

<p>‚ÄúELK‚Äù is the acronym for the three open source projects call Elasticsearch, Logstash and Kibana. ELK stack made easier to analyze logs to system administrators. ELK stack collect logs from clients using Beats protocol</p>

<h2 id="elk-stack-main-components">ELK STACK MAIN COMPONENTS</h2>

<p><strong>Elasticsearch</strong> is an open source, distributed, RESTful, JSON based search and analytic engine. Easy to use and flexible. Elasticsearch is the heart of ELK stack. Elasticsearch is a No-SQL database.</p>

<p><strong>Logstash</strong> is a open source, server-side data processing pipeline that pull events data from multitude of sources simultaneously, transform it, and then sends it to Elasticsearch. Easily pull data from logs, metrics, web applications, data sources and various AWS services. Logstash dynamically transforms and prepares data regardless of format or complexity. Derive structure from unstructured data with grock.</p>

<p><strong>Kibana</strong> provides GUI for users visualize data with charts and graphs real-time. It is a window into the Elastic Stack. Provides data exploration, visualization and dashboarding.</p>

<p><strong>Beats</strong> is the platform for single-purpose data shippers. They install as lightweight agents and send data from numerous machines to Logstash of</p>

<p><img src="/images/pages/elk-stack/image002.png" width="100%" /></p>

<p><img src="/images/pages/elk-stack/image003.png" width="100%" /></p>

<p>Software Versions I have used in this tutorial.</p>

<table>
  <thead>
    <tr>
      <th>Host</th>
      <th>IP</th>
      <th>Server/Client</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>elk.da.com</td>
      <td>192.168.10.10</td>
      <td>Server</td>
    </tr>
    <tr>
      <td>cl1.da.com</td>
      <td>192.168.10.110</td>
      <td>Client</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Package</th>
      <th>Version</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Elasticsearch</td>
      <td>Version: 7.3</td>
    </tr>
    <tr>
      <td>Logstash</td>
      <td>Version: 7.3</td>
    </tr>
    <tr>
      <td>Kibana</td>
      <td>Version: 7.3</td>
    </tr>
    <tr>
      <td>Java JDK</td>
      <td>jdk-11.0.4</td>
    </tr>
  </tbody>
</table>

<h2 id="step-1-complete-prerequsites">STEP 1: COMPLETE PREREQUSITES</h2>

<h4 id="a-set-hostname--fqdn">A: SET HOSTNAME &amp; FQDN</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/hostname</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>elk
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">vim /etc/hosts</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>192.168.10.10   elk.da.com  elk
</code></pre></div></div>

<h4 id="b-clear-and-remove-yum-cache-optional">B: CLEAR AND REMOVE YUM CACHE (Optional)</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo rm</span> /etc/yum.repos.d/<span class="nv">$REPONAME</span>.repo
yum clean all
</code></pre></div></div>

<p>Delete the yum cache for the repo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo rm</span> <span class="nt">-rf</span> /var/cache/yum/x86_64/6/<span class="nv">$REPONAME</span>
</code></pre></div></div>

<p>Clearing the yum Caches</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>su <span class="nt">-c</span> <span class="s1">'yum clean headers'</span>
su <span class="nt">-c</span> <span class="s1">'yum clean packages'</span>
su <span class="nt">-c</span> <span class="s1">'yum clean metadata'</span>
</code></pre></div></div>

<h4 id="c-install-and-update-latest-rpm-repositories">C: Install and Update Latest RPM Repositories</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm <span class="nt">-ivh</span> https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

rpm <span class="nt">-ivh</span> https://mirror.webtatic.com/yum/el7/webtatic-release.rpm

rpm <span class="nt">-ivh</span> http://rpms.famillecollet.com/enterprise/remi-release-7.rpm

rpm <span class="nt">-ivh</span> https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm

rpm <span class="nt">-ivh</span> http://repository.it4i.cz/mirrors/repoforge/redhat/el7/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm
</code></pre></div></div>

<h4 id="d-selinux-configuration">D: SeLinux Configuration</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/selinux/config</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">SELINUX</span><span class="o">=</span>permissive
</code></pre></div></div>

<h3 id="step-3-install-java-jdk">STEP 3: INSTALL JAVA JDK</h3>

<p>Java is required for the Elastic stack deployment. Elasticsearch requires Java 8, it is recommended to use the Oracle JDK 1.8. I will install Java 8 from the official Oracle rpm package. ELK requires the Oracle Java JDK package has to be installed. The same JVM version should be installed on all Elasticsearch nodes and clients.</p>

<h4 id="a-download-java-jdk-1104">A: Download JAVA JDK 11.0.4</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-o</span> jdk-11.0.4_linux-x64_bin.rpm https://download.oracle.com/otn/java/jdk/11.0.4+10/cf1bbcbf431a474eb9fc550051f4ee78/jdk-11.0.4_linux-x64_bin.rpm?AuthParam<span class="o">=</span>1566470470_04821224cc5f90794bc98fdb1d1b171a
</code></pre></div></div>
<h4 id="b-install-jdk-rpm-1104">B: INSTALL JDK RPM 11.0.4</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm <span class="nt">-ivh</span> jdk-11.0.4_linux-x64_bin.rpm
</code></pre></div></div>

<h3 id="c-set-default-java-version">C: SET DEFAULT JAVA VERSION</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alternatives <span class="nt">--config</span> java

alternatives <span class="nt">--set</span> jar /usr/java/jdk-11.0.4/bin/jar

alternatives <span class="nt">--set</span> javac /usr/java/jdk-11.0.4/bin/javac
</code></pre></div></div>

<h3 id="d-set-java-environment-variables">D: SET JAVA ENVIRONMENT VARIABLES</h3>
<p>SET JAVAC AND JAR PATHS</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk-11.0.4/
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/java/jdk-11.0.4/bin/
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">vim ~/.bashrc</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk-11.0.4/
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/java/jdk-11.0.4/bin/
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">vim ~/.bash_profile</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk-11.0.4/
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/java/jdk-11.0.4/bin/
</code></pre></div></div>

<h3 id="e-check-java-version">E: CHECK JAVA VERSION</h3>

<p><code class="language-plaintext highlighter-rouge">java -version</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>java version <span class="s2">"11.0.4"</span> 2019-07-16 LTS
Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment 18.9 <span class="o">(</span>build 11.0.4+10-LTS<span class="o">)</span>
Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM 18.9 <span class="o">(</span>build 11.0.4+10-LTS, mixed mode<span class="o">)</span>
</code></pre></div></div>

<h2 id="step-3-install-and-configure-elasticsearch">STEP 3: INSTALL AND CONFIGURE ELASTICSEARCH</h2>

<p>In this step, I will install and configure Elasticsearch version 7.3</p>

<h4 id="a-import-public-gpg-key-to-the-elk-stack-server">A: IMPORT PUBLIC GPG KEY TO THE ELK-STACK SERVER</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-create-yum-repo-file-for-elasticsearch">B: CREATE YUM REPO FILE FOR ELASTICSEARCH</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/yum.repos.d/elasticsearch.repo</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>elasticsearch-7.x]
<span class="nv">name</span><span class="o">=</span>Elasticsearch repository <span class="k">for </span>7.x packages
<span class="nv">baseurl</span><span class="o">=</span>https://artifacts.elastic.co/packages/7.x/yum
<span class="nv">gpgcheck</span><span class="o">=</span>1
<span class="nv">gpgkey</span><span class="o">=</span>https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="nv">enabled</span><span class="o">=</span>1
<span class="nv">autorefresh</span><span class="o">=</span>1
<span class="nb">type</span><span class="o">=</span>rpm-md
</code></pre></div></div>

<h4 id="c-install-elasticsearch-yum-packages">C: INSTALL ELASTICSEARCH YUM PACKAGES</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nt">-y</span> <span class="nb">install </span>elasticsearch
</code></pre></div></div>

<h4 id="configure-elasticsearch">CONFIGURE ELASTICSEARCH</h4>

<p>Do the following changes</p>

<p><code class="language-plaintext highlighter-rouge">vim /etc/elasticsearch/elasticsearch.yml</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cluster.name: elk
node.name: node-1
path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch
network.host: 127.0.0.1
http.host: 0.0.0.0
http.port: 9200
</code></pre></div></div>

<p><strong>JVM Options Configuration</strong></p>

<p>Set initial/maximum size of total heap space.
If your system has less memory. You should configure it to use small megabytes of ram.</p>

<p><code class="language-plaintext highlighter-rouge">vim /etc/elasticsearch/jvm.options</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-Xms4g</span>
<span class="nt">-Xmx4g</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">FIREWALL CONFIGURATION</code></p>

<p>Allow traffic through the TCP port 9200 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>9200/tcp

firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>9300/tcp

firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="start--enable-elasticsearch-at-system-boot">START &amp; ENABLE ELASTICSEARCH AT SYSTEM BOOT</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install </span>elasticsearch

<span class="nb">sudo</span> /bin/systemctl daemon-reload

<span class="nb">sudo</span> /bin/systemctl <span class="nb">enable </span>elasticsearch.service

<span class="nb">sudo</span> /bin/systemctl restart elasticsearch.service

<span class="nb">sudo</span> /bin/systemctl status <span class="nt">-l</span> elasticsearch.service

<span class="nb">sudo </span>journalctl <span class="nt">-f</span>

<span class="nb">sudo </span>journalctl <span class="nt">--unit</span> elasticsearch
</code></pre></div></div>

<h4 id="test-elasticsearch">TEST ELASTICSEARCH</h4>

<p>Check Elasticsearch port ‚Äú9200‚Äù state as ‚ÄúLISTEN‚Äù</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>netstat <span class="nt">-plntu</span>
</code></pre></div></div>

<h4 id="open-in-browser">OPEN IN BROWSER</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.10.10:9200/?pretty
</code></pre></div></div>

<h4 id="open-in-terminal">OPEN IN TERMINAL</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-XGET</span> <span class="s1">'192.168.10.10:9200/?pretty'</span>
</code></pre></div></div>

<h2 id="step-4-install-and-configure-logstash">STEP 4: INSTALL AND CONFIGURE LOGSTASH</h2>

<p><strong>In this step I will install Logstash version 7.3 and configure it as a central log server, receives logs from clients with Filebeat/Auditbeat, then filter and transform the syslog/Audit data and move it into the stash (Elasticsearch)</strong></p>

<h4 id="a-import-public-gpg-key-to-the-elk-stack-server-1">A: IMPORT PUBLIC GPG KEY TO THE ELK-STACK SERVER</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-create-yum-repo-file-for-elasticsearch-1">B: CREATE YUM REPO FILE FOR ELASTICSEARCH</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/yum.repos.d/logstash.repo</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>logstash-7.x]
<span class="nv">name</span><span class="o">=</span>Elastic repository <span class="k">for </span>7.x packages
<span class="nv">baseurl</span><span class="o">=</span>https://artifacts.elastic.co/packages/7.x/yum
<span class="nv">gpgcheck</span><span class="o">=</span>1
<span class="nv">gpgkey</span><span class="o">=</span>https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="nv">enabled</span><span class="o">=</span>1
<span class="nv">autorefresh</span><span class="o">=</span>1
<span class="nb">type</span><span class="o">=</span>rpm-md
</code></pre></div></div>

<h4 id="c-install-logstash-yum-packages">C: INSTALL LOGSTASH YUM PACKAGES</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nt">-y</span> <span class="nb">install </span>logstash
</code></pre></div></div>

<p>NOTE: Need to genarate SSL Certificate if you using SSL.This step is optional</p>

<blockquote>
  <p>GENERATE A NEW SSL CERTIFICATE
Create new ssl certificate for securing communication between Logstash &amp; Filebeat (clients). SSL Certificate file use clients to identify the elastic server.</p>

  <p>Do the following changes under the ‚Äú[ V3_ca ]‚Äù section for the server identification.</p>

  <p><code class="language-plaintext highlighter-rouge">vim /etc/pki/tls/openssl.cnf</code></p>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span> v3_ca <span class="o">]</span>
<span class="c">#Server IP Address</span>
subjectAltName <span class="o">=</span> IP: 192.168.10.10
</code></pre></div>  </div>

  <p>Generate the certificate file with the openssl command.</p>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl req <span class="nt">-config</span> /etc/pki/tls/openssl.cnf <span class="nt">-x509</span> <span class="nt">-days</span> 3650 <span class="nt">-batch</span> <span class="nt">-nodes</span> <span class="nt">-newkey</span> rsa:2048 <span class="nt">-keyout</span> /etc/pki/tls/private/logstash-forwarder.key <span class="nt">-out</span> /etc/pki/tls/certs/logstash-forwarder.crt
</code></pre></div>  </div>

  <p>Once ssl certificate is ready, this certificate should be copied to all the clients using scp command.</p>

</blockquote>

<h3 id="d-configure-logstash">D: CONFIGURE LOGSTASH</h3>

<p><code class="language-plaintext highlighter-rouge">vim /etc/logstash/logstash.yml</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>path.data: /var/lib/logstash
http.host: <span class="s2">"192.168.10.10"</span>
path.logs: /var/log/logstash
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /bin/systemctl daemon-reload

<span class="nb">sudo</span> /bin/systemctl <span class="nb">enable </span>logstash.service

<span class="nb">sudo</span> /bin/systemctl restart logstash.service

<span class="nb">sudo</span> /bin/systemctl status <span class="nt">-l</span> logstash.service

<span class="nb">sudo </span>journalctl <span class="nt">-f</span>

<span class="nb">sudo </span>journalctl <span class="nt">--unit</span> elasticsearch
</code></pre></div></div>

<p><img src="\images\elk-stack68\logstash1.PNG" width="100%" /></p>

<h4 id="e-jvm-configuration">E: JVM configuration</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/logstash/jvm.options</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-Xms4g</span>
<span class="nt">-Xmx4g</span>
</code></pre></div></div>

<h4 id="f-create-following-files-under-etclogstashconfd-directory">F: Create Following Files Under /etc/logstash/conf.d/ Directory.</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/logstash/conf.d/auditbeat.conf</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">### INPUT SECTION ###</span>
<span class="c">### This section make Logstash to listen on port 5044 for incoming logs &amp; provides SSL certificate for secure connection.</span>
input <span class="o">{</span>
  beats <span class="o">{</span>
    port <span class="o">=&gt;</span> 5044
<span class="c">#   ssl =&gt; true</span>
<span class="c">#   ssl_certificate =&gt; "/etc/pki/tls/certs/logstash-forwarder.crt"</span>
<span class="c">#   ssl_key =&gt; "/etc/pki/tls/private/logstash-forwarder.key"</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="c">### OUTPUT SECTION ###</span>
<span class="c">### This section defines the storage for the logs to be stored.</span>
output <span class="o">{</span>
  elasticsearch <span class="o">{</span>
    hosts <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">"http://192.168.10.10:9200"</span><span class="o">]</span>
    manage_template <span class="o">=&gt;</span> <span class="nb">false
    </span>index <span class="o">=&gt;</span> <span class="s2">"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.DD}"</span>
    document_type <span class="o">=&gt;</span> <span class="s2">"%{[@metadata][type]}"</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="g-firewall-configuration">G: FIREWALL CONFIGURATION</h4>
<p>Allow traffic through the TCP port 5044 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>5044/tcp
firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="enable--start-logstash-service">ENABLE &amp; START LOGSTASH SERVICE</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /bin/systemctl daemon-reload
<span class="nb">sudo</span> /bin/systemctl <span class="nb">enable </span>logstash.service
<span class="nb">sudo</span> /bin/systemctl restart logstash.service
<span class="nb">sudo</span> /bin/systemctl status <span class="nt">-l</span> logstash.service
<span class="nb">sudo </span>journalctl <span class="nt">-f</span>
<span class="nb">sudo </span>journalctl <span class="nt">--unit</span> elasticsearch
</code></pre></div></div>

<h2 id="step-5-install-and-configure-kibana">STEP 5: INSTALL AND CONFIGURE KIBANA</h2>

<h4 id="a-import-public-gpg-key-to-the-elk-stack-server-2">A: IMPORT PUBLIC GPG KEY TO THE ELK-STACK SERVER</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm <span class="nt">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch
</code></pre></div></div>

<h4 id="b-create-yum-repo-file-for-kibana">B: CREATE YUM REPO FILE FOR KIBANA</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/yum.repos.d/kibana.repo</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>kibana-7.x]
<span class="nv">name</span><span class="o">=</span>Kibana repository <span class="k">for </span>7.x packages
<span class="nv">baseurl</span><span class="o">=</span>https://artifacts.elastic.co/packages/7.x/yum
<span class="nv">gpgcheck</span><span class="o">=</span>1
<span class="nv">gpgkey</span><span class="o">=</span>https://artifacts.elastic.co/GPG-KEY-elasticsearch
<span class="nv">enabled</span><span class="o">=</span>1
<span class="nv">autorefresh</span><span class="o">=</span>1
<span class="nb">type</span><span class="o">=</span>rpm-md
</code></pre></div></div>

<h4 id="c-install-kibana-yum-packages">C: INSTALL KIBANA YUM PACKAGES</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install </span>kibana
</code></pre></div></div>

<h4 id="d-configure-kibana">D: CONFIGURE KIBANA</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/kibana/kibana.yml</code></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server.port: 5601
server.host: <span class="s2">"0.0.0.0"</span>
server.name: <span class="s2">"elk"</span>
elasticsearch.hosts: <span class="o">[</span><span class="s2">"http://127.0.0.1:9200"</span><span class="o">]</span>
</code></pre></div></div>

<p><img src="\images\elk-stack68\kibana1.PNG" width="100%" /></p>

<h4 id="e-firewall-configuration">E: FIREWALL CONFIGURATION</h4>
<p>Allow traffic through the TCP port 5044 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>5601/tcp
firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="f-enable--start-logstash-service">F: ENABLE &amp; START LOGSTASH SERVICE</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /bin/systemctl daemon-reload

<span class="nb">sudo</span> /bin/systemctl <span class="nb">enable </span>kibana.service

<span class="nb">sudo</span> /bin/systemctl restart kibana.service

<span class="nb">sudo</span> /bin/systemctl status <span class="nt">-l</span>  kibana.service
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>netstat <span class="nt">-tulpena</span> | <span class="nb">grep </span>5601
</code></pre></div></div>

<h2 id="step-6-install-and-configure-nginx">STEP 6: INSTALL AND CONFIGURE NGINX</h2>

<h4 id="a-insatll-epel-repository">A: INSATLL EPEL REPOSITORY</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>epel-release
</code></pre></div></div>

<h4 id="b-install-nginx--httpd-tools">B: INSTALL NGINX &amp; HTTPD-TOOLS</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>nginx httpd-tools
</code></pre></div></div>

<p>CREATE USERNAME ‚ÄúADMIN‚Äù AND PASSWORD ‚ÄúPASSWORD‚Äù FOR KIBANA WEB INTERFACE</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>htpasswd <span class="nt">-c</span> /etc/nginx/htpasswd.kibana admin
</code></pre></div></div>

<h4 id="c-configure-nginx">C: CONFIGURE NGINX</h4>
<p>Edit the Nginx configuration file and remove the ‚Äòserver { }‚Äô block, so we can add a new virtual host configuration.</p>

<p><code class="language-plaintext highlighter-rouge">vim /etc/nginx/nginx.conf</code></p>

<p>COMMENT {Server} Block:</p>

<p>Create new virtual host configuration file named ‚Äúkibana.conf‚Äù under the conf.d directory.</p>

<h4 id="d-create-vhost-for-kibana">D: Create VHOST FOr KIBANA:</h4>

<p><code class="language-plaintext highlighter-rouge">vim /etc/nginx/conf.d/kibana.conf</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server <span class="o">{</span>
    listen 80<span class="p">;</span>

    server_name elk-stack.co<span class="p">;</span>

    auth_basic <span class="s2">"Restricted Access"</span><span class="p">;</span>
    auth_basic_user_file /etc/nginx/htpasswd.kibana<span class="p">;</span>

    location / <span class="o">{</span>
        proxy_pass http://localhost:5601<span class="p">;</span>
        proxy_http_version 1.1<span class="p">;</span>
        proxy_set_header Upgrade <span class="nv">$http_upgrade</span><span class="p">;</span>
        proxy_set_header Connection <span class="s1">'upgrade'</span><span class="p">;</span>
        proxy_set_header Host <span class="nv">$host</span><span class="p">;</span>
        proxy_cache_bypass <span class="nv">$http_upgrade</span><span class="p">;</span>
    <span class="o">}</span>
   <span class="o">}</span>
</code></pre></div></div>

<p><img src="\images\elk-stack68\nginx_kibana.PNG" width="100%" /></p>

<h4 id="e-check-nginx-configuration">E: Check Nginx Configuration</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx <span class="nt">-t</span>
</code></pre></div></div>

<h4 id="f-firewall-configuration">F: FIREWALL CONFIGURATION</h4>
<p>Allow traffic through the TCP port 80 in the firewall.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>80/tcp
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-service</span><span class="o">=</span>http
firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="g-enable--start-nginx-service">G: ENABLE &amp; START NGINX SERVICE</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl <span class="nb">enable </span>nginx.service 
systemctl restart nginx.service
</code></pre></div></div>

<h4 id="selinux-confguration">SELINUX CONFGURATION</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setsebool <span class="nt">-P</span> httpd_can_network_connect 1
</code></pre></div></div>

<h2 id="step-07-connect-kibana-frontend-with-elasticsearch">STEP 07: Connect Kibana Frontend With Elasticsearch</h2>

<h5 id="you-need-assign-kibana-to-which-elasticsearch-indeces-you-want-yo-explore">You need assign Kibana to which Elasticsearch indeces you want yo explore.</h5>

<p>Configure the Elasticsearch Indices what you want to access with Kibana.</p>

<p>Open Web Browser and Point To‚Ä¶
(Only via Kibana)
<code class="language-plaintext highlighter-rouge">http://YOURIP.com:5601</code></p>

<p>OR</p>

<p>(If nginx/apache proxy redirect with VHOST)
<code class="language-plaintext highlighter-rouge">http://YOURIP.com:80</code></p>

<p><a href="https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ?sub_confirmation=1"><img src="Docker-Installation/sub.gif" /></a></p>

<p><a href="https://www.youtube.com/channel/UCovlVsoRVItner26ZJPBjmQ?sub_confirmation=1"><img src="Docker-Installation/sub.gif" alt="Foo" /></a></p>
:ET