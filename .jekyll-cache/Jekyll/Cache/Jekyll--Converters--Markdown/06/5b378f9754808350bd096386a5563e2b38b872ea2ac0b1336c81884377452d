I"Î~<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/ythjwVpuypo?&amp;autoplay=1" frameborder="0" allowfullscreen=""></iframe></div>

<h2 id="monitor-linux-server-with-nagios-core-using-snmp">Monitor Linux Server With Nagios Core Using SNMP</h2>

<p><strong>Nagios is one of the most popular industry slandered enterprise class server &amp; network monitoring solution.</strong></p>

<p><strong>Nagios core is free and open source tool which allows you to monitor your entire IT infrastructure to ensure host, services and applications functioning  properly.</strong></p>

<p>In this article I‚Äôm going to demonstrate how to monitor Linux host clients with Nagios Core using with SNMP.</p>

<p>SNMP. Which stands for Simple Network Management Protocol..</p>

<p>If you have already installed and setup Nagios Core Now Its time to  continue with me.</p>

<p>In the previous two videos I demonstrated how to install Nagios core on CentOS 7 and Monitor Remote Hosts and Services using NRPE agent plugin.</p>

<h2 id="remote-client-side-configuration">REMOTE CLIENT SIDE CONFIGURATION:</h2>

<h4 id="step-01-install-and-configure-snmp-on-remote-centos-7-host">STEP 01: Install and Configure SNMP on Remote CentOS 7 Host</h4>

<p>Now, install SNMP and SNMP-UTILLS with some dependencies.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl2 ~]# yum <span class="nt">-y</span> <span class="nb">install </span>net-snmp net-snmp-utils
</code></pre></div></div>

<h4 id="step-02-backup-default-snmp-configuration-file">STEP 02: Backup Default SNMP configuration file.</h4>

<p>Let‚Äôt make backup of ‚Äúsnmpd.conf‚Äù default configuration file.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl2 ~]# <span class="nb">cp</span> /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.orig
</code></pre></div></div>

<h4 id="step-03-configure-snmpdconf-file">STEP 03: Configure ‚Äúsnmpd.conf‚Äù File</h4>

<p>And do the following modifications into ‚Äúsnmpd.conf‚Äù</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl2 ~]# vim /etc/snmp/snmpd.conf
</code></pre></div></div>

<p>Insert following text content into the newly created ‚Äúsnmpd.conf‚Äù file.
Change the ‚Äúcommunity name‚Äù from public to something more secure. Edit the file ‚Äú/etc/snmp/snmpd.conf‚Äù using this example as a guide:</p>

<p>In this case I‚Äôm going to  add ‚Äúdigitalavenue‚Äù as my  snmp community string. By default it would be as ‚Äúpublic‚Äù</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># First, map the community name "public" into a "security name"</span>
<span class="c">#       sec.name  source          community</span>
<span class="c">#com2sec notConfigUser  default       public</span>
com2sec danetwork      172.25.10.0/24  digitalavenue
com2sec danetwork      127.0.0.1       digitalavenue
<span class="c">####</span>
<span class="c"># Second, map the security name into a group name:</span>

<span class="c">#       groupName      securityModel securityName</span>
<span class="c">#group   notConfigGroup v1           notConfigUser</span>
<span class="c">#group   notConfigGroup v2c          notConfigUser</span>
group   DAGROUP        v1           danetwork
group   DAGROUP        v2c          danetwork
<span class="c">####</span>
<span class="c"># Third, create a view for us to let the group have rights to:</span>

<span class="c"># Make at least  snmpwalk -v 1 localhost -c public system fast again.</span>
<span class="c">#       name           incl/excl     subtree         mask(optional)</span>
<span class="c">#view    systemview    included   .1.3.6.1.2.1.1</span>
<span class="c">#view    systemview    included   .1.3.6.1.2.1.25.1.1</span>
view    all           included   .1
<span class="c">####</span>
<span class="c"># Finally, grant the group read-only access to the systemview view.</span>

<span class="c">#       group          context sec.model sec.level prefix read   write  notif</span>
<span class="c">#access  notConfigGroup ""      any       noauth    exact  systemview none none</span>
access  DAGROUP        <span class="s2">""</span>      any       noauth    exact  all        none none

<span class="c">#syscontact Root &lt;root@localhost&gt; (configure /etc/snmp/snmp.local.conf)</span>
syslocation Rack01,Server Room 01,Digital Avenue, Colombo <span class="o">(</span>edit /etc/snmp/snmpd.conf<span class="o">)</span>
syscontact Admin digitalavenue@gmail.com <span class="o">(</span>configure /etc/snmp/snmp.local.conf<span class="o">)</span>
</code></pre></div></div>

<p>Also you can define physical location of your server and relevant contact email.</p>

<h4 id="now-check-weather-its-working-by-entering-this-command">Now check weather it‚Äôs working by entering this command.</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snmpwalk <span class="nt">-v2c</span> <span class="nt">-c</span> digitalavenue localhost:161
</code></pre></div></div>

<p>You will get plenty of information.</p>

<h4 id="step-05-firewall-configuration">STEP 05: Firewall Configuration</h4>

<p>Now I‚Äôm going to allow SNMP service port through the Firewall
So, Make sure to allow UDP port ‚Äú161‚Äù through your firewall/router to this SNMP service.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl1 ~]# firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-port</span><span class="o">=</span>161/udp
<span class="o">[</span>root@cl1 ~]# firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<h4 id="step-06-restart-snmpd-service">STEP 06: Restart SNMPD Service</h4>

<p>Restart ‚Äúsnmpd.service‚Äù to reflect the changes
And enable the service to  start at system boots.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl1 ~]# systemctl <span class="nb">enable  </span>snmpd.service 

<span class="o">[</span>root@cl1 ~]# systemctl restart snmpd.service
</code></pre></div></div>

<h4 id="step-07-test-snmp-service">STEP 07: Test SNMP Service</h4>

<p>Now, This command will return plenty of information in the SNMP installed host.</p>

<p>Replace ‚Äúdigitalavenue‚Äù my community string with your snmp community string that have mentioned in the ‚Äúsnmpd.conf‚Äù file.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@cl2 ~]# snmpwalk <span class="nt">-v2c</span> <span class="nt">-c</span> digitalavenue localhost:161
</code></pre></div></div>

<h2 id="nagios-server-side-configurations">NAGIOS SERVER SIDE CONFIGURATIONS:</h2>

<h4 id="step-01-add-command-definitions">STEP 01: Add Command Definitions</h4>

<p><strong>Now I‚Äôm going to use the default Nagios SNMP monitoring plugin, check_snmp,check_snmp_storage.pl, check_snmp_storage.pl,check_snmp_load.pl, check_snmp_int.pl scripts  to uptime, Physical Memory, Partition Size, Process, CPU Load and more.</strong></p>

<p>By defult, if check you will find all nagios plugins under /usr/local/nagios/libexec/ directory.</p>

<p>You can customize your commands your own way. so, please take some time to check carefully for  each plugin and their syntax.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios ~]# ./check_dns <span class="nt">-h</span>
Usage:
check_dns <span class="nt">-H</span> host <span class="o">[</span><span class="nt">-s</span> server] <span class="o">[</span><span class="nt">-q</span> <span class="nb">type</span> <span class="o">]</span> <span class="o">[</span><span class="nt">-a</span> expected-address] <span class="o">[</span><span class="nt">-A</span><span class="o">]</span> <span class="o">[</span><span class="nt">-n</span><span class="o">]</span> <span class="o">[</span><span class="nt">-t</span> <span class="nb">timeout</span><span class="o">]</span> <span class="o">[</span><span class="nt">-w</span> warn] <span class="o">[</span><span class="nt">-c</span> crit]
</code></pre></div></div>

<p>Generally most of snmp scripts comes with -H for  host IP,  -w for warning level, -c for critical level and -C for snmp community string.</p>

<p>And sometimes you may need to add some specific values which depends on your script that you going to use.</p>

<h5 id="some-example-commands">SOME EXAMPLE COMMANDS:</h5>

<p><strong>Check for Up-time</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.2.1.1.3.0</p>
</blockquote>

<p><strong>Running processes</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.2.1.25.1.6.0 -w 300 -c 400</p>
</blockquote>

<p><strong>Load Average</strong></p>

<p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.4.1.2021.10.1.3.1 -w 2.0 -c 5.0</p>

<p><strong>Logged In Users</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.2.1.25.1.5.0 -w 5 -c 10</p>
</blockquote>

<p><strong>Total Physical Memory Available</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.4.1.2021.4.5.0 -w %50 -c %75</p>
</blockquote>

<p><strong>Total Physical Memory Used</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.4.1.2021.4.6.0 -w %75 -c %90</p>
</blockquote>

<p><strong>Total Physical Memory Used</strong></p>

<blockquote>
  <p>/usr/local/nagios/libexec/check_snmp -H 172.25.10.110 -C digitalavenue -o .1.3.6.1.4.1.2021.4.11.0 -w %30 -c %25</p>
</blockquote>

<h4 id="optionally-you-can-collect-snmp-oids-and-thier-names-to-retrive-specific-data-and-build-your-own-commands">Optionally you can collect snmp OIDs and thier names to retrive specific data and build your own commands.</h4>

<p><strong>1. Run snmpwalk to view OID name</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snmpwalk <span class="nt">-v</span> 1 <span class="nt">-c</span> digitalavenue 172.25.10.110
</code></pre></div></div>

<p>make sure to change -c with your snmp community string</p>

<p><strong>2. Pick one, ie: HOST-RESOURCES-MIB::hrStorageSize.1 (Total Physical Memory)</strong></p>

<p><strong>3. Use snmptranslate to get OID number</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snmptranslate <span class="nt">-On</span> HOST-RESOURCES-MIB::hrStorageSize.1
</code></pre></div></div>

<p><strong>4. Check the OID number with check_snmp manually</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/local/nagios/libexec/check_snmp <span class="nt">-H</span> 192.168.56.1 <span class="nt">-C</span> digitalavenue <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.5.1
</code></pre></div></div>

<p><strong>5. And create your own command definition</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>define <span class="nb">command</span><span class="o">{</span>
        command_name    check_snmp_total_memory
        command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ </span><span class="nt">-C</span> digitalavenue <span class="nt">-o</span> <span class="nv">$ARG1</span><span class="err">$</span>
        <span class="o">}</span>
</code></pre></div></div>

<p><strong>6. Finally need to create a service definition</strong></p>

<p>Add values to host-name and service_description accordingly.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>define service<span class="o">{</span>
        use                             generic-service
        host_name                       cl2
        service_description             Total Physical Memory
        check_command                   check_snmp_total_memory!.1.3.6.1.2.1.25.2.3.1.5.1
        <span class="o">}</span>
</code></pre></div></div>

<p>And one another thing to keep in mind is all these arguments should separated by ! mark.</p>

<p>Headover to ‚Äú/usr/local/nagios/etc/objects/commands.cfg‚Äù file and define command definitons. Which will be used to check uptime, disk usage, physical memory used.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios ~]# vim /usr/local/nagios/etc/objects/commands.cfg
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">######################## USER DEFINED COMMANDS #############################</span>

<span class="c">########## SNMP COMMAND CONFIGURATION SECTION</span>

<span class="c">## check_snmp plugin commands definitions</span>

<span class="c">## SNMP Command Definition - Up time</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    SNMP-Uptime
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> 1.3.6.1.2.1.25.1.1.0 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## SNMP Command Definition - Total RAM installed </span>
define <span class="nb">command</span><span class="o">{</span>
command_name    SNMP-TotalRAMInstalled
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> 1.3.6.1.4.1.2021.4.5.0 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## SNMP Command Definition - Total Physical Memory</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageSize.1
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.5.1 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## SNMP Command Definition - Used Physical Memory</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageUsed.1
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.6.1 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## SNMP Command Definition - Cached Physical Memory</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageSize.7
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.5.7 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## SNMP Command Definition - Buffered Physical Memory</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageDescr.6
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.5.6 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c"># Total ROOT Partition Size </span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageDescr.31
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.3.31 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c"># Used ROOT Partition Size </span>
define <span class="nb">command</span><span class="o">{</span>
command_name    HOST-RESOURCES-MIB::hrStorageUsed.31
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.2.3.1.6.31 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c"># Running processes</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    SNMP-TotalProccessRunning
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.2.1.25.1.6.0 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c"># CPU Load 1m</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    snmp_load_1m
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.4.1.2021.10.1.3.1 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>
<span class="c"># CPU Load 15m</span>
define <span class="nb">command</span><span class="o">{</span>
command_name    snmp_load_15m
command_line    <span class="nv">$USER1$/</span>check_snmp <span class="nt">-o</span> .1.3.6.1.4.1.2021.10.1.3.3 <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $ARG1</span><span class="err">$</span>
<span class="o">}</span>

<span class="c">## check_snmp_storage command definitions</span>

<span class="c">## SNMP Command Definiton - DISK</span>
define <span class="nb">command</span><span class="o">{</span>
command_name	check_snmp_storage
command_line	<span class="nv">$USER1$/</span>check_snmp_storage.pl <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $USER8$ </span><span class="nt">-m</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3$ $ARG4$ </span><span class="nt">-C</span> digitalavenue
<span class="o">}</span>

<span class="c">## check_snmp_mem command definitions</span>

<span class="c">## SNMP Command Definition - Physical Memory</span>
define <span class="nb">command</span><span class="o">{</span>
command_name	check_snmp_mem
command_line	<span class="nv">$USER1$/</span>check_snmp_storage.pl <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $USER8$ </span><span class="nt">-m</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3$ $ARG4$ </span><span class="nt">-C</span> digitalavenue
<span class="o">}</span>

<span class="c">## check_snmp_process command definitions</span>

<span class="c">## SNMP Command Definition - Process</span>
define <span class="nb">command</span><span class="o">{</span>
command_name	check_snmp_process
command_line	<span class="nv">$USER1$/</span>check_snmp_process.pl <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $USER7$ </span><span class="nt">-n</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3$ $ARG4$ </span><span class="nt">-C</span> digitalavenue
<span class="o">}</span>

<span class="c">## check_snmp_load command definitions</span>

<span class="c">## SNMP Command Definiton - CPU Load</span>
define <span class="nb">command</span><span class="o">{</span>
command_name	check_snmp_load
command_line	<span class="nv">$USER1$/</span>check_snmp_load.pl <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $USER7$ </span><span class="nt">-T</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3$ $ARG4$ </span><span class="nt">-C</span> digitalavenue
<span class="o">}</span>

<span class="c">## check_snmp_int command definitions</span>

<span class="c">## SNMP Command Definition - Interface </span>
define <span class="nb">command</span><span class="o">{</span>
command_name	check_snmp_iface
command_line	<span class="nv">$USER1$/</span>check_snmp_int.pl <span class="nt">-H</span> <span class="nv">$HOSTADDRESS$ $USER7$ </span><span class="nt">-n</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3$ </span><span class="nt">-C</span> digitalavenue
<span class="o">}</span>


<span class="c">## 'check_dns' command definitions</span>

<span class="c">## SNMP Command Definition - DNS</span>
define <span class="nb">command</span> <span class="o">{</span>
command_name	check_dns
command_line	<span class="nv">$USER1$/</span>check_dns <span class="nt">-H</span> digitalave.github.io <span class="nt">-s</span> 8.8.8.8 <span class="nt">-t</span> 15 | <span class="nb">sed</span>  <span class="nt">-e</span> <span class="s2">"s/returns.*//g"</span> 
<span class="o">}</span>

<span class="c">########## checking using NRPE/Script #############</span>

<span class="c">## check_volume command definition</span>

define <span class="nb">command</span><span class="o">{</span>
command_name	check_volume
command_line	<span class="nv">$USER1$/</span>check_volume.sh <span class="nt">-v</span> <span class="nv">$ARG1$ </span><span class="nt">-w</span> <span class="nv">$ARG2$ </span><span class="nt">-c</span> <span class="nv">$ARG3</span><span class="err">$</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="step-02-create-config-directory">STEP 02: CREATE CONFIG DIRECTORY</h4>

<p>Now, I will add the corresponding service definitions to apply the above commands that I‚Äôve added into commands.cfg file.</p>

<p>Create a directory that will store the configuration files for each server that you will need to monitor.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios ~]# <span class="nb">sudo mkdir</span> /usr/local/nagios/etc/hosts
</code></pre></div></div>

<h4 id="step-03-create-hostservice-definition-file">STEP 03: CREATE HOST/SERVICE DEFINITION FILE</h4>

<p>Create a new configuration file for each of the remote hosts that we want to monitor.</p>

<p>In this case I‚Äôm going to put all the host and service definitions into a single file.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios ~]# vim /usr/local/nagios/etc/hosts/cl2.cfg
</code></pre></div></div>

<p>Now we need to add new host &amp; service entries for each remote server you will need to monitor.</p>

<p>Now I create a new cl2.cfg file for remote host which contain host &amp; service definitions all together.</p>

<p>Add host definition section and change ‚Äúhost_name‚Äù and ‚Äúaddress‚Äù sections.</p>

<p>finally we need to mention each service you want to monitor.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios ~]# vim /usr/local/nagios/etc/hosts/cl2.cfg
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Host configuration Section</span>
define host <span class="o">{</span>
        use                          linux-server
        host_name                    cl2
        <span class="nb">alias                        </span>CentOS 7 - Server
        address                      172.25.10.100
        register                     1
        contact_groups               admins
<span class="o">}</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Service Configuration Section</span>

<span class="c">########## SNMP SERVICE CONFIGURATION SECTION</span>

<span class="c">## check_snmp plugin service definitions</span>

<span class="c">## SNMP Service Definition - Up time</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     System <span class="nb">uptime
</span>check_command           SNMP-Uptime!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - Total RAM installed </span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Total Memory Installed
check_command           SNMP-TotalRAMInstalled!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - Total Physical Memory</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Total Physical Memory
check_command           HOST-RESOURCES-MIB::hrStorageSize.1!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - Used Physical Memory</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Used Physical Momory
check_command           HOST-RESOURCES-MIB::hrStorageUsed.1!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - Cached Physical Memory</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Cached Physical Momory
check_command           HOST-RESOURCES-MIB::hrStorageSize.7!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - Buffered Physical Memory</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Buffered Physical Momory
check_command           HOST-RESOURCES-MIB::hrStorageDescr.6!-C digitalavenue
<span class="o">}</span>


<span class="c">## SNMP Service Definition - Total Running Process</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Total Running Process
check_command           SNMP-TotalProccessRunning!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - CPU Load 1M</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     CPU Load 1Minute
check_command           snmp_load_1m!-C digitalavenue
<span class="o">}</span>

<span class="c">## SNMP Service Definition - CPU Load 15M</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     CPU Load 15Minute
check_command           snmp_load_15m!-C digitalavenue
<span class="o">}</span>

<span class="c"># check_snmp_storage service definitions</span>

<span class="c">## SNMP Service Definition - DISK ROOT</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Disk Root
check_command           check_snmp_storage!<span class="s2">"^/$"</span><span class="o">!</span>80!90
<span class="o">}</span>

<span class="c"># SNMP Service Definition - DISK BOOT</span>
define service<span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Disk Boot
check_command           check_snmp_storage!^/boot!80!90
<span class="o">}</span>

<span class="c"># check_snmp_mem service definitions</span>

<span class="c"># SNMP Service Definition - Memory</span>
define service <span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Memory
check_command           check_snmp_mem!Physical Memory!80!90
<span class="o">}</span>

<span class="c"># check_snmp_process service definitions</span>

<span class="c"># SNMP Service Definition - Process SNMPD</span>
define service <span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Process SNMPD
check_command           check_snmp_process!snmpd!5,100!0!-2 <span class="nt">-m</span> 20,30 <span class="nt">-u</span> 90,99
<span class="o">}</span>

<span class="c"># SNMP Service Definition - Process HTTPD</span>
define service <span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Process HTTPD
check_command           check_snmp_process!httpd!5,100!0!-2 <span class="nt">-m</span> 20,30 <span class="nt">-u</span> 90,99
<span class="o">}</span>

<span class="c"># SNMP Service Definition - CPU Load</span>
define service <span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     CPU Load
check_command           check_snmp_load!netsc!50!90
<span class="o">}</span>

<span class="c"># SNMP Service Definition - CPU Load</span>
define service <span class="o">{</span>
use                     generic-service
host_name               cl2
service_description     Interface Status
check_command           check_snmp_iface!enp0s3!enp0s3!100,50!0,0
<span class="o">}</span>


<span class="c">########## checking using NRPE/Script #############</span>

<span class="c"># "check_volume.sh" Service Definition - Partition Root</span>
define service<span class="o">{</span>
use               local-service
host_name         cl2
service_description     Partition ROOT
check_command           check_volume!/!75!90
<span class="o">}</span>

<span class="c"># "check_volume.sh" Service Definition - Partition Root</span>
define service<span class="o">{</span>
use                     local-service
host_name               cl2
service_description     Partition BOOT
check_command           check_volume!/boot!75!90
<span class="o">}</span>


<span class="c"># "check_volume.sh" Service Definition - Partition Root</span>
define service<span class="o">{</span>
use                     local-service
host_name               cl2
service_description     Partition HOME
check_command           check_volume!/home!75!90
<span class="o">}</span>
</code></pre></div></div>

<h4 id="step-04-add-host-definition-file-path-into--nagios-main-configuration-file">STEP 04: Add Host Definition File Path Into  Nagios Main Configuration File.</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios etc]# vim /usr/local/nagios/etc/nagios.cfg
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">cfg_file</span><span class="o">=</span>/usr/local/nagios/etc/hosts/cl2.cfg
</code></pre></div></div>

<h4 id="step-05-verify-nagios-configs-and-check-for-error">STEP 05: VERIFY NAGIOS CONFIGS AND CHECK FOR ERROR</h4>

<p>At last, verify Nagios configuration files for any errors.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/local/nagios/bin/nagios <span class="nt">-v</span> /usr/local/nagios/etc/nagios.cfg
</code></pre></div></div>

<h4 id="step-06-restart-nagios-service">STEP 06: Restart Nagios Service</h4>

<p>Finally restart nagios server.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@nagios /]# systemctl restart nagios httpd
</code></pre></div></div>

<p>Now, headover to  the Nagios Web Interface. And then you will see newly added host and its service status.</p>

<p><strong>I hope, now you will have a clear understanding of how to add Linux hosts into nagios monitoring using SNMP agent.</strong></p>

<p><strong>If you find this video helpful, Please subscribe my channel to keep in touch with new video guides like this.</strong></p>

:ET